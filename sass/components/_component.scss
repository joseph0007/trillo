//----------------------------------header styling-----------------------------//

.header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    height: 7rem;
    border-bottom: var(--line);

    &__logo {
        margin-left: 2rem;
        height: 3.25rem;
    }

    @include respond(smallest) {
        flex-wrap: wrap;
        height: 11rem;
        align-content: space-around;
    }
}

.search-box {
    display: flex;
    font-size: 1.4rem;
    margin-left: 4rem;
    flex: 0 0 40%;
    position: relative;

    justify-content: center;
    align-items: center;

    @include respond(smallest) {
       order: 1;
       flex: 0 0 100%;
       margin-left: 0;
    }

    &__input {
        font-family: inherit;
        font-size: inherit;
        color: inherit;
        border: none;
        width: 90%;
        border-radius: 10rem;
        padding: .9rem 2rem ;
        background-color: var(--color-grey-light-2);
        transition: width 0.3s ease-out;

        &:focus {
            outline: none;
            width: 100%;
        }

        &::-webkit-input-placeholder {
            font-size: inherit;
            color: rgba(0,0,0, 0.2);
        }
    }

    &__input:focus + &__suggestion {
        transform: translateY(3.5rem);
        opacity: 1;
        visibility: visible;
    }

    &__suggestion {
        position: absolute;
        top: 0rem;
        left: 2.75rem;
        background-color: #fff;
        border-radius: 5px;
        z-index: 100;
        width: 90%;
        border: 1px solid var(--color-grey-light-3);
        transition: all 0.2s;
        opacity: 0;
        visibility: hidden;

        &__item {
            padding: 1rem 2rem;
            font-size: inherit;
            color: rgba(0,0,0, 0.3);
            &:not(:last-child) {
                border-bottom: var(--line);
            }
        }
    }



    &__button {
        border: none;
        background-color: var(--color-grey-light-2);
        margin-left: -3.5rem;
        transition: all 0.2s;

        &:focus {
            outline: none;
        }

        &:active {
            transform: translateY(2px);
        }

    }

    &__icon {
        width: 2.25rem;
        height: 2.25rem;
        fill: var(--color-grey-dark-3);
    }
}

.user-nav {
    display: flex;
    justify-content: space-around;
    align-items: center;
    align-self: stretch;
    position: relative;

    & > * {
        display: flex;
        align-items: center;
        cursor: pointer;
        height: 100%;
        padding: 0 2rem;
    }

    & > *:hover {
        &:not(:last-child) {
            background-color: var(--color-grey-light-3);
        }
    }

    & > *:hover ~ &__hover-box {
        visibility: visible;
        transform: scaleY(1);
    }

    &__icon-box {
        position: relative;
        
    }

    &__icon {
        width: 3.5rem;
        height: 2.5rem;
        fill: var(--color-grey-dark-2);
    }

    &__notification {
        display: flex;
        height: 1.75rem;
        width: 1.75rem;
        justify-content: center;
        align-items: center;
        position: absolute;
        top: 1.4rem;
        right: 2rem;
        color: var(--color-grey-light-1);
        background-color: var(--primary-color);
        border-radius: 50%;
    }

    
    &__user-photo {
        width: 4rem;
        height: auto;
        border-radius: 50%;
        margin-right: 1rem;
    }

    &__user-name {
        font-size: 1.3rem;
    }

    &__hover-box {
        position: absolute;
        top: 7rem;
        left: 2rem;
        width: 24rem;
        height: 19rem;
        background-color: #fff;
        z-index: 10;
        border-radius: 5px;
        transform-origin: top;
        transform: scaleY(0);
        border: var(--line);
        visibility: hidden;
        transition: all 0.3s;
    }
}

//----------------------navigation styling--------------------------------------//

.sidebar-nav {
    display: flex;
    flex-direction: column;
    justify-content: space-between;


    &__list {
        list-style: none;
        margin-top: 2rem;

        @include respond(medium) {
            display: flex;
            justify-content: space-around;
            margin: 0;
            
        }
    }

    &__item {
        &:not(:last-child) {
            margin-bottom: 1rem;

            @include respond(medium) {
                margin: 0;
            }
        }
    }

    &__link {
        &:link, 
        &:visited {
            color: var(--color-grey-light-1);
            text-decoration: none;
            display: flex;
            align-items: center;
            padding: 1rem 2.5rem;
            position: relative;
            //for z-index to work you need to set position value!!!!
            z-index: 1;

            @include respond(medium) {
                padding: 2rem 3.5rem;
            }

            @include respond(smallest) {
                flex-direction: column;
            }

            @include respond(phone) {
                padding: 1rem 1rem;
            }
        }

        &:hover {
            cursor: pointer;
        }


        &::before,
        &--active::before {
            content: "";
            display: block;
            //::before and ::after psuedo elements considers the elements whose psuedo element they are to be their parent element
            position: absolute;
            top: 0;
            left: 0;
            width: 3px;
            height: 100%;
            background-color: var(--primary-color);
            transform: scaleY(0);
            transition: transform 0.2s, width 0.4s cubic-bezier(1,0,0,1) 0.2s, background-color 0.1s;
            z-index: -1;
        }

        &:hover::before,
        &--active::before {
            transform: scaleY(1);
            width: 100%;
        }

        &:active::before {
            background-color: var(--secondary-color);
        }

    }

    &__icon {
        height: 1.75rem;
        width: 1.75rem;
        //currentColor property value can be very useful when you want to set a color that is same as the parent element's color or
        //current element's color
        fill: currentColor;
        //vertical-align: sub;
    }

    &__label {
        font-size: 1.6rem;
        text-transform: uppercase;
        margin-left: 1.5rem;

        @include respond(smallest) {
            margin-left: 0;
            margin-top: 1rem;
        }

        @include respond(phone) {
            font-size: 1rem;
            margin-top: .7rem;
        }
    }

    &__text {
        font-size: 1rem;
        text-transform: capitalize;
        text-align: center;
        margin-bottom: 2rem;

        @include respond(medium) {
            display: none;
        }
    }
}

//------------------------------gallery images-----------------------//

.gallery {
    display: flex;

    & figure {
        position: relative;
    }
    
    &__image {
        display: block;
        width: 100%;

    }

    &__caption {
        position: absolute;
        top: 0;
        left: 50%;
        transform: translateX(-50%) scale(0);
        padding: 1rem 1.5rem;
        background-color: var(--primary-color);
        color: #fff;
        opacity: 0;
        border-bottom-left-radius: 5px;
        border-bottom-right-radius: 5px;
        font-size: 1.4rem;
        transition: all 0.4s;
    }

    & figure:hover &__caption {
        transform: translateX(-50%) scale(1);
        opacity: 0.8;
    }
}

//------------------------------overview bar-----------------------//

.overview {
    display: flex;
    align-items: center;
    border-bottom: var(--line);

    @include respond(phone) {
        flex-wrap: wrap;
        justify-content: space-around;
    }

    &__heading {
        text-transform: uppercase;
        font-size: 2.25rem;
        font-weight: 300;
        letter-spacing: 1px;
        margin-left: 2rem;
        padding: 1rem;

        @include respond(smallest) {
            font-size: 1.5rem;
        }

        @include respond(phone) {
            flex: 0 0 40%;
            margin-left: 0;
        }
    }

    &__stars {
        //this is a great technique to use with flexbox if you want to use the avialable space inside the flx container to your liking
        //you could just use all the space for one single flex-item by setting its margin-left/right to auto.
        //the browser will automatically assign all the available space to that item's left/right !!!! 
        margin-right: auto;
        display: flex;
        //svg are considered inline elements so the browser treats them as text and so there can be the issue of some white space 
        //below the svg-icon and that can hinder the proper alignment of the flex-items
        @include respond(phone) {
            flex: 0 0 30%;
            margin-right: 0;
        }
    }

    &__icon {
        height: 1.75rem;
        width: 1.75rem;
        fill: var(--primary-color);
    }

    &__location {
        display: flex;
        align-items: center;
        color: var(--primary-color);
        font-size: 1.2rem;
        margin-right: 2rem;
        &-icon {
            height: 1.5rem;
            width: 1.5rem;
            fill: currentColor;
        }

        @include respond(phone) {
            flex: 0 0 40%;
            margin-right: 0;
        }
    }

    &__review {
        align-self: stretch;
        background-color: var(--primary-color);
        color: var(--color-grey-light-1);
        text-transform: capitalize;
        padding: 1.25rem 1.4rem;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        
        @include respond(phone) {
            flex: 0 0 30%;
        }
    }

    &__rating {
        font-size: 2.2rem;
        font-weight: 300;
        color: currentColor;

        @include respond(smallest) {
            font-size: 1.5rem;
        }
    }

    &__review-count {
        margin-top: -3px;
        font-size: 0.8rem;
        color: currentColor;

        @include respond(smallest) {
           margin-top: 0;
        }
    }
}

.inline-btn {
    background-color: transparent; //great way to make code modular by keeping in mind how to make a component very reuseable
                                   //in this case by not setting the background-color to a solid color but transparent so that it can
                                   //adapt to any background color.!!!!
    border: none;
    color: var(--primary-color);
    font-size: inherit;
    border-bottom: 1px solid currentColor;
    padding-bottom: .5rem;
    text-transform: capitalize;
    margin-left: 1rem;

    @include respond(small) {
        align-self: center;
    }

    & span {
        margin-left: 3px;
    }

    &:hover {
        color: var(--color-grey-dark-2);

        span {
            margin-left: 8px;
        }
    }

    &:focus {
        outline: none;
        animation: pulsate 1s infinite;
    }

    &:active {
        color: var(--color-grey-dark-2);
    }

}

@keyframes pulsate {
    0% {
        transform: scale(1);
        box-shadow: none;
    }

    50% {
        transform: scale(1.05);
        box-shadow: 0 .7rem 1.5rem rgba(0,0,0, 0.2);
    }

    100% {
        transform: scale(1);
        box-shadow: none;
    }
}

//------------------------------description-----------------------//

.paragraph {
    &:not(:last-of-type) {
        margin-bottom: 1.5rem;
    }
}

.list {
    list-style: none;
    display: flex;
    flex-wrap: wrap;
    padding-top: 2rem;
    border-top: var(--line);
    border-bottom: var(--line);
    margin: 2rem 0 auto 0;

    &__item {
        text-transform: capitalize;
        flex: 0 0 50%;
        margin-bottom: 2rem;

        @include respond(phone) {
            flex: 0 0 100%;
        }

        &::before {
            content: "";
            display: inline-block;
            width: 1rem;
            height: 1rem;
            margin-right: 1rem;

            //for older browsers that dont support mask property
            //but it is recommended to use this way and if you need to change the color just add an inline style to the svg file!!!
            background-image: url(../img/chevron-thin-right.svg);
            background-size: cover;

            //the mask property is nonstandard and is not recommended to use(it still works though atleast in chrome!!)
            // background-color: var(--primary-color);
            // -webkit-mask-image: url(../img/chevron-thin-right.svg);
            // -webkit-mask-size: cover;
            
        }
    }
}

.recommends {
    display: flex;
    align-items: center;
    justify-content: space-between;

    @include respond(phone) {
        flex-direction: column;
    }    

    &__paragragh {
        font-size: 1.2rem;

        @include respond(phone) {
            margin-bottom: 1rem;
        }
    }

    &__photo-box {
        display: flex;
        align-items: center;
    }

    &__image {
        display: inline-block;
        box-sizing: content-box;
        width: 3.5rem;
        height: 3.5rem;
        border-radius: 50%;
        border: 2px solid #fff;
        &:not(:last-child) {
            margin-right: -1.5rem;
        }
    }
}

//---------------------------user-reviews-----------------------//

.review {
    position: relative;
    background-color: #fff;
    &:not(:last-child) {
        margin-bottom: 4.5rem;

        @include respond(medium) {
            margin-bottom: 2.5rem;
        }
    }
    padding: 2.5rem;
    overflow: hidden;
    box-shadow: var(--box-shadow-small);

    &__paragraph {
        margin-bottom: 2rem;
        z-index: 10;
        position: relative;
    }

    &__caption {
        display: flex;
        align-items: center;
    }

    &__image {
        display: block;
        width: 4rem;
        height: 4rem;
        border-radius: 50%;
        margin-right: 2rem;
    }

    &__details {
        display: flex;
        flex-direction: column;
        align-items: center;
        margin-right: auto;
    }

    &__name {
        font-size: 1.1rem;
        font-weight: 600;
        color: var(--color-grey-dark-1);
        text-transform: uppercase;
        margin-bottom: .6rem;
    }

    &__date {
        font-size: 1rem;
        text-transform: capitalize;
        color: var(--color-grey-dark-3);
    }

    &__rating {
        color: var(--primary-color);
        font-size: 2.25rem;
    }

    &::before {
        content: "\201C";
        font-family: sans-serif;
        display: block;
        position: absolute;
        top: 6px;
        left: -8px;
        font-size: 20rem;
        margin-top: -3rem;
        line-height: 1;
        color: var(--color-grey-light-3);
        z-index: 1;
    }
}

//---------------------------cta section-----------------------//

.cta {
    padding: 4.5rem;
    text-align: center;

    @include respond(medium) {
        padding: 2.5rem;
    }

    &__heading {
        font-size: 1.75rem;
        text-transform: uppercase;
        font-weight: 300;
        margin-bottom: 2.5rem;

        @include respond(phone) {
            font-size: 1.4rem;
        }
    }

    &__button {
        display: inline-block;
        border: none;
        background-color: none;
        background-image: linear-gradient(to right, var(--secondary-color), var(--tertiary-color));
        border-radius: 100px;
        color: #fff;
        font-size: 1.6rem;
        text-transform: uppercase;
        position: relative;
        overflow: hidden;

        @include respond(phone) {
            font-size: 1.2rem;
        }

        & > * {
            display: inline-block;
            width: 100%;
            height: 100%;
            transition: all 0.2s;
        }

        &--invisible {
            padding: 2rem 0;
            position: absolute;
            top: -100%;
            left: 0;
        }

        &--visible {
            padding: 2rem 7.5rem;
        }

        &:hover {
            background-image: linear-gradient(to left, var(--secondary-color), var(--tertiary-color));
        }

        &:hover &--invisible{
            top: 0;
        }

        &:hover &--visible{
            transform: translateY(100%);
        }

        &:focus {
            outline: none;
            animation: pulsate 1s infinite;
        }
    }
}